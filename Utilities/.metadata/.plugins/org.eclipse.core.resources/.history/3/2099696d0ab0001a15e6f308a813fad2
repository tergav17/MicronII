package asm;

import java.io.File;

public class Assembler {
	
	public int assemble(File in, File out) {
		return 0;
	}
	
	
	
	public String decToAscii(int i) {
		return ((char) i) + "";
	}
	
	public int asciiToDec(String ascii) {
		return hexToDec(asciiToHex(ascii));
	}
	
	public String hexToAscii(String hexStr) {
	    StringBuilder output = new StringBuilder("");
	     
	    for (int i = 0; i < hexStr.length(); i += 2) {
	        String str = hexStr.substring(i, i + 2);
	        output.append((char) Integer.parseInt(str, 16));
	    }
	     
	    return output.toString();
	}
	
	public String asciiToHex(String asciiStr) {
	    char[] chars = asciiStr.toCharArray();
	    StringBuilder hex = new StringBuilder();
	    for (char ch : chars) {
	    	String hexString = Integer.toHexString((int) ch);
	    	if (hexString.length() == 1) {
	    		hexString = "0" + hexString;
	    	}
	        hex.append(hexString);
	    }
	 
	    return hex.toString();
	}
	
	public int hexToDec(String hex) {
		return Integer.parseInt(hex, 16);
	}
	
	public String decToHex(int i, int l) {
		String out = Integer.toHexString(i).toUpperCase(); 
		if (l != -1) {
			while (out.length() < l) {
				out = "0" + out;
			}
			while (out.length() > l) {
				out = out.substring(1, out.length());
			}
		}
		return out;
	}
	
}

